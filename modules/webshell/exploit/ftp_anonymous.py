#!/usr/bin/env python3
"""
FTP Anonymous Exploit - TQDM 50% ON FAIL (NO ANIMATION)
"""

import socket
from rich.console import Console
from rich.panel import Panel
from rich.table import Table
from rich import box
from tqdm import tqdm
import sys

console = Console()

def run_exploit(target, port=21):
    # === HEADER ===
    header = Table.grid(expand=True)
    header.add_column(justify="left", style="bold cyan")
    header.add_column(justify="right", style="dim")
    header.add_row(
        "FTP ANONYMOUS",
        f"Target: {target}:{port} | Protocol: TCP | Risk: Low"
    )
    console.print(Panel(header, border_style="bright_blue", padding=(1, 2)))

    output = []
    result = "UNKNOWN"

    # === TQDM BAR (MULAI DARI 0%) ===
    with tqdm(
        total=100,
        desc="Status: Connecting",
        bar_format="  {l_bar}{bar}| {n_fmt}/{total_fmt}",
        colour="cyan",
        file=sys.stdout,
        leave=False
    ) as status_bar:
        try:
            # 1. Connect (0% → 40%)
            status_bar.update(40)
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(5)
            sock.connect((target, port))

            # 2. Banner (40% → 100%)
            status_bar.update(60)
            banner = sock.recv(1024).decode('utf-8', errors='ignore').strip()
            console.print(f"\r[bold green]Status:[/] Connected! Banner: {banner[:50]}{'...' if len(banner)>50 else ''}")
            output.append(f"[+] Banner: {banner}")

        except Exception as e:
            # === GAGAL → PAKSA 50% LANGSUNG (TANPA ANIMASI) ===
            status_bar.update(50 - status_bar.n)  # Langsung ke 50%
            status_bar.close()

            error_msg = str(e)
            if "No route" in error_msg:
                console.print(f"\r[bold red]Status:[/] No route to host")
                output.append("[red][!] No route to host[/]")
            elif "refused" in error_msg:
                console.print(f"\r[bold red]Status:[/] Connection refused")
                output.append("[red][!] Connection refused[/]")
            elif "timeout" in error_msg:
                console.print(f"\r[bold red]Status:[/] Connection timeout")
                output.append("[red][!] Connection timeout[/]")
            else:
                console.print(f"\r[bold red]Status:[/] Failed")
                output.append(f"[red][!] {error_msg}[/]")
            result = f"ERROR - {error_msg}"

            # TAMPILKAN LANGSUNG
            console.print(Panel(
                "\n".join(output),
                title="EXPLOIT LOG",
                border_style="bright_magenta",
                padding=(1, 2),
                box=box.ROUNDED
            ))
            console.print(Panel.fit(
                f"[bold red]{result.split('-', 1)[-1].strip()}[/]",
                title="RESULT",
                border_style="bright_red"
            ))
            return result

    # === JIKA SUKSES → EXPLOIT PHASE ===
    with tqdm(
        total=100,
        desc="Exploiting",
        bar_format="  {l_bar}{bar}| {n_fmt}/{total_fmt} [{elapsed}]",
        colour="cyan",
        file=sys.stdout,
        leave=False
    ) as pbar:
        pbar.update(25)

        # USER
        sock.send(b"USER anonymous\r\n")
        user = sock.recv(1024).decode('utf-8', errors='ignore').strip()
        output.append(f"[+] USER → {user.split()[0] if user else 'No response'}")
        pbar.update(25)

        # PASS
        sock.send(b"PASS anonymous@\r\n")
        passwd = sock.recv(1024).decode('utf-8', errors='ignore').strip()
        output.append(f"[+] PASS → {passwd.split()[0] if passwd else 'No response'}")
        pbar.update(25)

        # CEK
        if "230" in passwd:
            output.append("\n[bold green][+] SUCCESS: Anonymous login allowed![/]")

            # PWD
            sock.send(b"PWD\r\n")
            pwd = sock.recv(1024).decode('utf-8', errors='ignore').strip()
            output.append(f"[dim]PWD: {pwd}[/]")

            # LIST
            sock.send(b"LIST\r\n")
            try:
                sock.recv(1024)
            except:
                pass
            list_data = sock.recv(4096).decode('utf-8', errors='ignore')
            files = [l for l in list_data.splitlines() if l.strip()]
            if files:
                file_panel = Panel(
                    "\n".join(files[:10]) + ("\n..." if len(files) > 10 else ""),
                    title="DIRECTORY LISTING",
                    border_style="bright_magenta",
                    padding=(0, 1)
                )
                output.append(file_panel)
            result = "SUCCESS"
        else:
            output.append("\n[bold red][!] FAILED: Access denied[/]")
            result = "FAILED"
        pbar.update(25)

    # QUIT
    try:
        sock.send(b"QUIT\r\n")
        sock.close()
    except:
        pass

    # === LOG ===
    console.print(Panel(
        "\n".join(str(o) for o in output),
        title="EXPLOIT LOG",
        border_style="bright_magenta",
        padding=(1, 2),
        box=box.ROUNDED
    ))

    # === RESULT ===
    if result == "SUCCESS":
        res = Panel.fit(
            "[bold green]SUCCESS[/] — Anonymous access granted",
            title="RESULT",
            border_style="bright_green"
        )
    else:
        res = Panel.fit(
            f"[bold red]{result}[/]",
            title="RESULT",
            border_style="bright_red"
        )
    console.print(res)

    return result

# Compatibility
exploit = main = run = run_exploit

if __name__ == "__main__":
    target = sys.argv[1] if len(sys.argv) > 1 else "192.168.1.100"
    run_exploit(target)
